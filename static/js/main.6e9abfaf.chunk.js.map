{"version":3,"sources":["img/avatars/Adi.png","img/avatars/Ana.png","img/avatars/Andrew.png","img/avatars/Angus.png","img/avatars/Anna.png","img/avatars/Annabeth.png","img/avatars/Anshul.png","img/avatars/Bob.png","img/avatars/Brian.png","img/avatars/Catherine.png","img/avatars/Chris.png","img/avatars/ChrisHayes.png","img/avatars/DavidPaparelli.jpg","img/avatars/Emmy.png","img/avatars/Eric.png","img/avatars/Erik.png","img/avatars/Greg.png","img/avatars/Hansel.png","img/avatars/Harrison.png","img/avatars/James.jpg","img/avatars/Joi.png","img/avatars/Kristina.png","img/avatars/Lea.png","img/avatars/Maggie.png","img/avatars/Max.png","img/avatars/May.png","img/avatars/Mel.jpg","img/avatars/MichaelCooney.png","img/avatars/Neha.png","img/avatars/Noah.png","img/avatars/Rachel.png","img/avatars/Rob.png","img/avatars/Sarah.png","img/avatars/Saumil.png","img/avatars/Saurin.png","img/avatars/ScottWoolf.png","img/avatars/Shanni.png","img/avatars/Steven.png","img/avatars/Vaibhav.png","img/avatars/Will.png","img/avatars/Zach.png","components/icons/AddCommentIcon.js","components/AddMilestoneForm.js","components/SubmitEditForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AddCommentIcon","fill","xmlns","viewBox","width","height","d","AddMilestoneForm","onSubmit","addEventType","updateAddEventType","addEventDate","updateAddEventDate","addEventPrecise","updateAddEventPrecise","addEventDesc","updateAddEventDesc","addEventCheckboxes","addEventOtherPeople","updateAddEventOtherPeople","createStringOfAllPeopleInAddEvent","className","action","method","target","name","type","value","checked","onChange","e","readOnly","split","SubmitEditForm","milestoneDateToSubmit","dateCheck","updateDateCheck","milestonePeopleToSubmit","peopleCheck","updatePeopleCheck","milestoneDescToSubmit","descCheck","updateDescCheck","editEventDesc","updateEditEventDesc","App","useState","data","updateData","uid","filterTypes","updateFilterTypes","filterPeople","updateFilterPeople","checkAllPeople","updateCheckAllPeople","checkAllTypes","updateCheckAllTypes","isFilterPeopleExclusive","updateIsFilterPeopleExclusive","updateMilestoneDescToSubmit","updateMilestoneDateToSubmit","updateMilestonePeopleToSubmit","modalOpen","updateModal","editModalOpen","updateEditModalOpen","addModalOpen","updateAddModalOpen","addEventCheckboxesData","updateAddEventCheckboxesData","formatDate","dateString","precise","splitString","month","parseInt","day","year","stickybits","useStickyClasses","useEffect","formatDateForSort","googleDate","finishSetup","mainTimeline","submittedResponses","FILTERED_RESPONSES","filter","milestone","hide","sortedData","concat","sort","a","b","date","allPeopleInEvents","personFilters","addEventPersonCheckboxes","forEach","formatPeople","people","person","indexOf","push","addEventPersonCheckbox","createFilters","Tabletop","init","key","callback","tabletop","simpleSheet","peopleToShow","map","i","typesToHide","join","showYear","currentYear","photoMap","Adi","Ana","Andrew","Angus","Anna","Annabeth","Anshul","Bob","Brian","Catherine","Chris","ChrisHayes","DavidPaparelli","Emmy","Eric","Erik","Greg","Hansel","Harrison","James","Joi","Kristina","Lea","Maggie","Max","May","Mel","MichaelCooney","Neha","Noah","Rachel","Rob","Sarah","Saumil","Saurin","ScottWoolf","Shanni","Steven","Vaibhav","Will","Zach","randomAvatarColors","timelineItems","index","event","size","peopleInThisEvent","peopleInFiltersAndThisEvent","allPeopleInFiltersAreInThisEvent","every","includes","peopleNotInFilter","length","typeNotInFilter","hideThisItem","peopleAvatars","photoUrl","showInitial","undefined","style","backgroundImage","backgroundColor","Math","floor","random","charAt","id","onClick","typeCheckboxes","newFilterTypes","peopleCheckboxes","newFilterPeople","checkData","newAddEventCheckboxesData","clearEditFormFields","closeEditModal","clearAddFormFields","oldAddEventCheckboxesData","newPersonCheckbox","updateAllAddEventCheckboxes","closeAddModal","href","rel","display","onload","then","arrayOfAllPeople","checkbox","oldFilterTypes","newFilter","updateAllTypeCheckboxes","oldFilterPeople","updateAllPeopleCheckboxes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6e9abfaf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Adi.b6b2fe35.png\";","module.exports = __webpack_public_path__ + \"static/media/Ana.e1b41c50.png\";","module.exports = __webpack_public_path__ + \"static/media/Andrew.f143184f.png\";","module.exports = __webpack_public_path__ + \"static/media/Angus.4807b48d.png\";","module.exports = __webpack_public_path__ + \"static/media/Anna.38d93cb8.png\";","module.exports = __webpack_public_path__ + \"static/media/Annabeth.2204bac1.png\";","module.exports = __webpack_public_path__ + \"static/media/Anshul.1703db80.png\";","module.exports = __webpack_public_path__ + \"static/media/Bob.7ed8f99f.png\";","module.exports = __webpack_public_path__ + \"static/media/Brian.c2e60a4d.png\";","module.exports = __webpack_public_path__ + \"static/media/Catherine.c048edc2.png\";","module.exports = __webpack_public_path__ + \"static/media/Chris.1ce7b954.png\";","module.exports = __webpack_public_path__ + \"static/media/ChrisHayes.f8921eaf.png\";","module.exports = __webpack_public_path__ + \"static/media/DavidPaparelli.a1290dd0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Emmy.457167fb.png\";","module.exports = __webpack_public_path__ + \"static/media/Eric.be237587.png\";","module.exports = __webpack_public_path__ + \"static/media/Erik.d19c6c16.png\";","module.exports = __webpack_public_path__ + \"static/media/Greg.39bb770a.png\";","module.exports = __webpack_public_path__ + \"static/media/Hansel.5f5f4bab.png\";","module.exports = __webpack_public_path__ + \"static/media/Harrison.60f1aee2.png\";","module.exports = __webpack_public_path__ + \"static/media/James.07f17384.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Joi.a8320bcd.png\";","module.exports = __webpack_public_path__ + \"static/media/Kristina.5a9995a6.png\";","module.exports = __webpack_public_path__ + \"static/media/Lea.615bbafa.png\";","module.exports = __webpack_public_path__ + \"static/media/Maggie.0da0b977.png\";","module.exports = __webpack_public_path__ + \"static/media/Max.07d8e354.png\";","module.exports = __webpack_public_path__ + \"static/media/May.44a2727c.png\";","module.exports = __webpack_public_path__ + \"static/media/Mel.b6433d16.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MichaelCooney.046a8fde.png\";","module.exports = __webpack_public_path__ + \"static/media/Neha.9df8b833.png\";","module.exports = __webpack_public_path__ + \"static/media/Noah.2f485ac5.png\";","module.exports = __webpack_public_path__ + \"static/media/Rachel.87af83e5.png\";","module.exports = __webpack_public_path__ + \"static/media/Rob.6e31c5ca.png\";","module.exports = __webpack_public_path__ + \"static/media/Sarah.60253518.png\";","module.exports = __webpack_public_path__ + \"static/media/Saumil.018b7842.png\";","module.exports = __webpack_public_path__ + \"static/media/Saurin.af0a9f87.png\";","module.exports = __webpack_public_path__ + \"static/media/ScottWoolf.3de27325.png\";","module.exports = __webpack_public_path__ + \"static/media/Shanni.eabc9f87.png\";","module.exports = __webpack_public_path__ + \"static/media/Steven.8c523684.png\";","module.exports = __webpack_public_path__ + \"static/media/Vaibhav.64a7a858.png\";","module.exports = __webpack_public_path__ + \"static/media/Will.678f380b.png\";","module.exports = __webpack_public_path__ + \"static/media/Zach.11335887.png\";","import React from \"react\";\n\nexport default function AddCommentIcon({ fill = \"#000\" }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill={fill}\n      width=\"24px\"\n      height=\"24px\"\n    >\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n      <path d=\"M21.99 4c0-1.1-.89-2-1.99-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4-.01-18zM17 11h-4v4h-2v-4H7V9h4V5h2v4h4v2z\" />\n    </svg>\n  );\n}\n","import React from \"react\";\n\nexport default function AddMilestoneForm({\n  onSubmit,\n  addEventType,\n  updateAddEventType,\n  addEventDate,\n  updateAddEventDate,\n  addEventPrecise,\n  updateAddEventPrecise,\n  addEventDesc,\n  updateAddEventDesc,\n  addEventCheckboxes,\n  addEventOtherPeople,\n  updateAddEventOtherPeople,\n  createStringOfAllPeopleInAddEvent,\n}) {\n  return (\n    <form\n      className=\"form\"\n      action=\"https://docs.google.com/forms/u/1/d/e/1FAIpQLSfUF2D2Yh3tJgiAa4tUAjNqnzfFBiKeGe9MdibIehRlPSD4Kw/formResponse\"\n      method=\"post\"\n      target=\"hidden_iframe\"\n      onSubmit={() => {\n        \"submitted=true;\";\n        onSubmit();\n      }}\n    >\n      <h2 className=\"form-title\">Add a milestone</h2>\n      <p className=\"form-label\">What type of milestone is it?</p>\n      <div className=\"form-field form-field--radio\">\n        <label className=\"radio-container\">\n          event\n          <input\n            name=\"entry.465797031\"\n            type=\"radio\"\n            value=\"event\"\n            checked={addEventType === \"event\" ? true : false}\n            onChange={(e) => {\n              if (e.target.checked) {\n                updateAddEventType(\"event\");\n              }\n            }}\n          />\n          <span className=\"checkmark\" />\n        </label>\n      </div>\n      <div className=\"form-field form-field--radio\">\n        <label className=\"radio-container\">\n          intro\n          <input\n            name=\"entry.465797031\"\n            type=\"radio\"\n            value=\"intro\"\n            checked={addEventType === \"intro\" ? true : false}\n            onChange={(e) => {\n              if (e.target.checked) {\n                updateAddEventType(\"intro\");\n              }\n            }}\n          />\n          <span className=\"checkmark\" />\n        </label>\n      </div>\n      <div className=\"form-field form-field--radio\">\n        <label className=\"radio-container\">\n          move\n          <input\n            name=\"entry.465797031\"\n            type=\"radio\"\n            value=\"move\"\n            checked={addEventType === \"move\" ? true : false}\n            onChange={(e) => {\n              if (e.target.checked) {\n                updateAddEventType(\"move\");\n              }\n            }}\n          />\n          <span className=\"checkmark\" />\n        </label>\n      </div>\n      <div className=\"form-field form-field--radio\">\n        <label className=\"radio-container\">\n          trip\n          <input\n            name=\"entry.465797031\"\n            type=\"radio\"\n            value=\"trip\"\n            checked={addEventType === \"trip\" ? true : false}\n            onChange={(e) => {\n              if (e.target.checked) {\n                updateAddEventType(\"trip\");\n              }\n            }}\n          />\n          <span className=\"checkmark\" />\n        </label>\n      </div>\n\n      {/* date - first one is to use date picker, doesn't submit */}\n      <div className=\"form-flex form-flex-date\">\n        <div className=\"form-field\">\n          <label className=\"form-label\">When did it happen?</label>\n          <p className=\"form-help\">\n            Please enter a full date, even if you're not 100% sure.\n          </p>\n          <input\n            onChange={(e) => {\n              updateAddEventDate(e.target.value);\n            }}\n            type=\"date\"\n            value={addEventDate}\n          />\n        </div>\n\n        {/* precise */}\n        <div className=\"form-field form-field--checkbox form-field--checkbox-date\">\n          <label className=\"checkbox-container\">\n            This date isn't exact, but it's close!\n            <input\n              type=\"checkbox\"\n              onChange={(e) => {\n                updateAddEventPrecise(e.target.checked);\n              }}\n              checked={addEventPrecise}\n            />\n            <span className=\"checkmark\" />\n          </label>\n        </div>\n      </div>\n\n      {/* actually submits the date */}\n      <div className=\"form-field hide\">\n        <label className=\"form-label\">date</label>\n        <input\n          readOnly\n          type=\"text\"\n          name=\"entry.1572580151\"\n          value={`${addEventDate.split(\"-\")[1]}/${addEventDate.split(\"-\")[2]}/${\n            addEventDate.split(\"-\")[0]\n          }`}\n        />\n      </div>\n\n      {/* actually submits precise */}\n      <div className=\"form-field hide\">\n        <label className=\"form-label\">precise</label>\n        <input\n          readOnly\n          type=\"text\"\n          name=\"entry.818650547\"\n          value={addEventPrecise ? \"N\" : \"Y\"}\n        />\n      </div>\n\n      {/* event */}\n      <div className=\"form-field\">\n        <label className=\"form-label\">What happened?</label>\n        <p className=\"form-help\">\n          This will be the milestone description. Everything you include will be\n          visible on the timeline!\n        </p>\n        <textarea\n          onChange={(e) => {\n            updateAddEventDesc(e.target.value);\n          }}\n          value={addEventDesc}\n          name=\"entry.2083246933\"\n        />\n      </div>\n\n      {/* people */}\n      <p className=\"form-label\">Who was involved?</p>\n      <div className=\"form-field--checkbox-wrap\">\n        {addEventCheckboxes}\n        {/* {checkboxesForPeopleInAddMilestone} */}\n      </div>\n\n      <div className=\"form-field\">\n        <label className=\"form-label\">Anyone else?</label>\n        <p className=\"form-help\">Separate each name by a comma.</p>\n        <input\n          onChange={(e) => {\n            updateAddEventOtherPeople(e.target.value);\n          }}\n          value={addEventOtherPeople}\n          type=\"text\"\n        />\n      </div>\n\n      {/* hidden field submitting all people */}\n      <div className=\"form-field hide\">\n        <label className=\"form-label\">people</label>\n        <input\n          readOnly\n          value={createStringOfAllPeopleInAddEvent()}\n          name=\"entry.210962264\"\n          type=\"text\"\n        />\n      </div>\n\n      <div className=\"form-flex\">\n        {/* name */}\n        <div className=\"form-field\">\n          <label className=\"form-label\">Your name</label>\n          <input name=\"entry.2022364556\" type=\"text\" />\n        </div>\n        {/* email */}\n        <div className=\"form-field\">\n          <label className=\"form-label\">Your email</label>\n          <input name=\"entry.2051201691\" type=\"email\" />\n        </div>\n      </div>\n\n      {/* hide */}\n      <div className=\"hide\">\n        <div className=\"form-field\">\n          <label>hide</label>\n          <input readOnly value=\"N\" type=\"text\" name=\"entry.1603008717\" />\n        </div>\n      </div>\n\n      <p>\n        Once you submit, your milestone will be immediately added to the\n        timeline. Make sure it looks good!!!\n      </p>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\n","import React from \"react\";\n\nexport default function SubmitEditForm({\n  onSubmit,\n  milestoneDateToSubmit,\n  dateCheck,\n  updateDateCheck,\n  milestonePeopleToSubmit,\n  peopleCheck,\n  updatePeopleCheck,\n  milestoneDescToSubmit,\n  descCheck,\n  updateDescCheck,\n  editEventDesc,\n  updateEditEventDesc,\n}) {\n  return (\n    <form\n      className=\"form\"\n      action=\"https://docs.google.com/forms/u/1/d/e/1FAIpQLSe8ZGjkYfwGaKkZZvqIzzJ23fkaQjVy4rH3tVbhC5zjHUN1Gw/formResponse\"\n      method=\"post\"\n      target=\"hidden_iframe\"\n      onSubmit={() => {\n        \"submitted=true;\";\n        onSubmit();\n        // updateEditModalOpen(false).then(clearEditFormFields());\n      }}\n    >\n      <h2 className=\"form-title\">Submit edits to this milestone</h2>\n\n      <div className=\"form-field form-field--checkbox-wrap\">\n        <p className=\"form-label\">What needs to be edited?</p>\n        <div className=\"form-field form-field--checkbox form-field--checkbox-full\">\n          <label className=\"checkbox-container\">\n            <div className=\"submit-wrap\">\n              <span className=\"submit-label\">The date of the milestone: </span>\n              <span className=\"submit-data\">{milestoneDateToSubmit}</span>\n            </div>\n            <input\n              name=\"entry.1414516352\"\n              type=\"checkbox\"\n              value=\"The date of the milestone\"\n              checked={dateCheck}\n              onChange={(e) => {\n                updateDateCheck(e.target.checked);\n              }}\n            />\n            <span className=\"checkmark\" />\n          </label>\n        </div>\n        <div className=\"form-field form-field--checkbox form-field--checkbox-full\">\n          <label className=\"checkbox-container\">\n            <div className=\"submit-wrap\">\n              <span className=\"submit-label\">The people involved: </span>\n              <span className=\"submit-data\">{milestonePeopleToSubmit}</span>\n            </div>\n            <input\n              name=\"entry.1414516352\"\n              type=\"checkbox\"\n              value=\"The people involved\"\n              checked={peopleCheck}\n              onChange={(e) => {\n                updatePeopleCheck(e.target.checked);\n              }}\n            />\n            <span className=\"checkmark\" />\n          </label>\n        </div>\n        <div className=\"form-field form-field--checkbox form-field--checkbox-full\">\n          <label className=\"checkbox-container\">\n            <div className=\"submit-wrap\">\n              <span className=\"submit-label\">The description: </span>\n              <span className=\"submit-data\">{milestoneDescToSubmit}</span>\n            </div>\n            <input\n              name=\"entry.1414516352\"\n              type=\"checkbox\"\n              value=\"The description\"\n              checked={descCheck}\n              onChange={(e) => {\n                updateDescCheck(e.target.checked);\n              }}\n            />\n            <span className=\"checkmark\" />\n          </label>\n        </div>\n      </div>\n\n      <div className=\"form-field\">\n        <label className=\"form-label\">What needs to be updated?</label>\n        <textarea\n          name=\"entry.1629872213\"\n          type=\"text\"\n          value={editEventDesc}\n          onChange={(e) => {\n            updateEditEventDesc(e.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-flex\">\n        <div className=\"form-field\">\n          <label className=\"form-label\">Your name</label>\n          <input name=\"entry.867338912\" type=\"text\" />\n        </div>\n        <div className=\"form-field\">\n          <label className=\"form-label\">Your email</label>\n          <input name=\"entry.1913191690\" type=\"email\" />\n        </div>\n      </div>\n\n      {/* stuff to prepopulate */}\n      <div className=\"hide\">\n        <div className=\"form-field\">\n          <label>milestone date</label>\n          <input\n            readOnly\n            name=\"entry.198487940\"\n            type=\"text\"\n            value={milestoneDateToSubmit}\n          />\n        </div>\n        <div className=\"form-field\">\n          <label>milestone description</label>\n          <input\n            readOnly\n            name=\"entry.1640389616\"\n            type=\"text\"\n            value={milestoneDescToSubmit}\n          />\n        </div>\n        <div className=\"form-field\">\n          <label>milestone people</label>\n          <input\n            readOnly\n            name=\"entry.635908298\"\n            type=\"text\"\n            value={milestonePeopleToSubmit}\n          />\n        </div>\n      </div>\n\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport Tabletop from \"tabletop\";\nimport uid from \"uid\";\nimport stickybits from \"stickybits\";\n\nimport AddCommentIcon from \"./components/icons/AddCommentIcon.js\";\n\nimport Adi from \"./img/avatars/Adi.png\";\nimport Ana from \"./img/avatars/Ana.png\";\nimport Andrew from \"./img/avatars/Andrew.png\";\nimport Angus from \"./img/avatars/Angus.png\";\nimport Anna from \"./img/avatars/Anna.png\";\nimport Annabeth from \"./img/avatars/Annabeth.png\";\nimport Anshul from \"./img/avatars/Anshul.png\";\nimport Bob from \"./img/avatars/Bob.png\";\nimport Brian from \"./img/avatars/Brian.png\";\nimport Catherine from \"./img/avatars/Catherine.png\";\nimport Chris from \"./img/avatars/Chris.png\";\nimport ChrisHayes from \"./img/avatars/ChrisHayes.png\";\nimport DavidPaparelli from \"./img/avatars/DavidPaparelli.jpg\";\nimport Emmy from \"./img/avatars/Emmy.png\";\nimport Eric from \"./img/avatars/Eric.png\";\nimport Erik from \"./img/avatars/Erik.png\";\nimport Greg from \"./img/avatars/Greg.png\";\nimport Hansel from \"./img/avatars/Hansel.png\";\nimport Harrison from \"./img/avatars/Harrison.png\";\nimport James from \"./img/avatars/James.jpg\";\nimport Joi from \"./img/avatars/Joi.png\";\nimport Kristina from \"./img/avatars/Kristina.png\";\nimport Lea from \"./img/avatars/Lea.png\";\nimport Maggie from \"./img/avatars/Maggie.png\";\nimport Max from \"./img/avatars/Max.png\";\nimport May from \"./img/avatars/May.png\";\nimport Mel from \"./img/avatars/Mel.jpg\";\nimport MichaelCooney from \"./img/avatars/MichaelCooney.png\";\nimport Neha from \"./img/avatars/Neha.png\";\nimport Noah from \"./img/avatars/Noah.png\";\nimport Rachel from \"./img/avatars/Rachel.png\";\nimport Rob from \"./img/avatars/Rob.png\";\nimport Sarah from \"./img/avatars/Sarah.png\";\nimport Saumil from \"./img/avatars/Saumil.png\";\nimport Saurin from \"./img/avatars/Saurin.png\";\nimport ScottWoolf from \"./img/avatars/ScottWoolf.png\";\nimport Shanni from \"./img/avatars/Shanni.png\";\nimport Steven from \"./img/avatars/Steven.png\";\nimport Vaibhav from \"./img/avatars/Vaibhav.png\";\nimport Will from \"./img/avatars/Will.png\";\nimport Zach from \"./img/avatars/Zach.png\";\n\nimport \"./styles/index.scss\";\n\nimport AddMilestoneForm from \"./components/AddMilestoneForm.js\";\nimport SubmitEditForm from \"./components/SubmitEditForm.js\";\n\nfunction App() {\n  // DATA RETURNED FROM SPREADSHEETS:\n  const [data, updateData] = useState([]);\n\n  const [filterTypes, updateFilterTypes] = useState([\n    {\n      type: \"event\",\n      checked: true,\n      uid: uid(),\n    },\n    {\n      type: \"intro\",\n      checked: true,\n      uid: uid(),\n    },\n    {\n      type: \"move\",\n      checked: true,\n      uid: uid(),\n    },\n    {\n      type: \"trip\",\n      checked: true,\n      uid: uid(),\n    },\n  ]);\n  const [filterPeople, updateFilterPeople] = useState([]);\n  const [checkAllPeople, updateCheckAllPeople] = useState(false);\n  const [checkAllTypes, updateCheckAllTypes] = useState(false);\n  const [isFilterPeopleExclusive, updateIsFilterPeopleExclusive] = useState(\n    true\n  );\n\n  const [milestoneDescToSubmit, updateMilestoneDescToSubmit] = useState(\"\");\n  const [milestoneDateToSubmit, updateMilestoneDateToSubmit] = useState(\"\");\n  const [milestonePeopleToSubmit, updateMilestonePeopleToSubmit] = useState(\"\");\n\n  // MODAL CONTROLS:\n  const [modalOpen, updateModal] = useState(false); // rename to filter modal\n  const [editModalOpen, updateEditModalOpen] = useState(false);\n  const [addModalOpen, updateAddModalOpen] = useState(false);\n\n  // FIELDS FOR 'EDIT MILESTONE' FORM\n  const [editEventDesc, updateEditEventDesc] = useState(\"\");\n  const [peopleCheck, updatePeopleCheck] = useState(false);\n  const [dateCheck, updateDateCheck] = useState(false);\n  const [descCheck, updateDescCheck] = useState(false);\n\n  // FIELDS FOR 'ADD A MILESTONE' FORM\n  const [addEventType, updateAddEventType] = useState(\"\");\n  const [addEventDate, updateAddEventDate] = useState(\"\"); // when did it happen?\n  const [addEventPrecise, updateAddEventPrecise] = useState(false); // \"this date isn't exact\" checkbox\n  const [addEventDesc, updateAddEventDesc] = useState(\"\");\n  const [addEventCheckboxesData, updateAddEventCheckboxesData] = useState([]); // an array of objects representing checkboxes of people\n  const [addEventOtherPeople, updateAddEventOtherPeople] = useState(\"\"); // \"Anyone else?\"\n\n  // stick the years on scroll\n  stickybits(\".year-wrap\", { useStickyClasses: true });\n\n  // runs once on page load:\n  useEffect(() => {\n    function createFilters(data) {\n      let allPeopleInEvents = [];\n\n      let personFilters = [];\n\n      let addEventPersonCheckboxes = [];\n\n      data.forEach(({ people }) => {\n        let peopleInThisEvent = formatPeople(people);\n        peopleInThisEvent.forEach((person) => {\n          if (allPeopleInEvents.indexOf(person) === -1) {\n            allPeopleInEvents.push(person);\n            let filter = {\n              person,\n              checked: true,\n              uid: uid(),\n            };\n            personFilters.push(filter);\n\n            let addEventPersonCheckbox = {\n              person,\n              checked: false,\n              uid: uid(),\n            };\n            addEventPersonCheckboxes.push(addEventPersonCheckbox);\n          }\n        });\n      });\n      personFilters.sort((a, b) => (a.person > b.person ? 1 : -1)); // alphabetize\n      updateFilterPeople(personFilters);\n\n      addEventPersonCheckboxes.sort((a, b) => (a.person > b.person ? 1 : -1)); // alphabetize\n      updateAddEventCheckboxesData(addEventPersonCheckboxes);\n    }\n\n    function formatDateForSort(googleDate) {\n      const splitString = googleDate.split(\"/\");\n      let month = parseInt(splitString[0], 10);\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n      let day = parseInt(splitString[1], 10);\n      if (day < 10) {\n        day = \"0\" + day;\n      }\n      const year = splitString[2];\n      let formattedDate = `${year}-${month}-${day}`;\n      return [formattedDate];\n    }\n\n    /* FOLLOWING CODE IS FOR PAPAPARSE. TBA ON WHETHER THIS WILL WORK */\n\n    // const MASTER_SHEET =\n    //   \"https://docs.google.com/spreadsheets/d/e/2PACX-1vSQVovaTHIAN1669rUYinPqb3VfZIGBvpgiqKkNNW44Zkl2ZHhx-MdVCsD6CHDVUnmcc__UDNR5LBrt/pub?output=csv\";\n\n    // const SUBMITTED_MILESTONES =\n    //   \"https://docs.google.com/spreadsheets/d/e/2PACX-1vQYc1XgbSvLbZZwd-ta4Nm0hJ3K75-FpOIBkk8n01mUDZXiXw3cAeZ91i5heLWKowOjnSEk9PZioAb8/pub?output=csv\";\n\n    // let MASTER_SHEET_DATA = [];\n\n    // Papa.parse(MASTER_SHEET, {\n    //   download: true,\n    //   header: true,\n    //   complete: saveAndGetSubmittedResponses,\n    // });\n\n    // function saveAndGetSubmittedResponses(masterSheetData) {\n    //   MASTER_SHEET_DATA = masterSheetData.data;\n\n    //   Papa.parse(SUBMITTED_MILESTONES, {\n    //     download: true,\n    //     header: true,\n    //     complete: finishSetup,\n    //   });\n    // }\n\n    // function finishSetup(submittedResponsesData) {\n    //   const FILTERED_RESPONSES = submittedResponsesData.data.filter(\n    //     (milestone) => {\n    //       return milestone.hide !== \"Y\"; // filter out responses we want to hide\n    //     }\n    //   );\n    //   let dataFromBothSheets = MASTER_SHEET_DATA.concat(FILTERED_RESPONSES);\n    //   let sortedData = dataFromBothSheets.sort((a, b) =>\n    //     formatDateForSort(a.date) > formatDateForSort(b.date) ? 1 : -1\n    //   ); // sort by date\n    //   updateData(sortedData);\n    //   createFilters(sortedData);\n    // }\n\n    function finishSetup(mainTimeline, submittedResponses) {\n      const FILTERED_RESPONSES = submittedResponses.filter((milestone) => {\n        return milestone.hide !== \"Y\"; // filter out responses we want to hide\n      });\n      let dataFromBothSheets = mainTimeline.concat(FILTERED_RESPONSES);\n      let sortedData = dataFromBothSheets.sort((a, b) =>\n        formatDateForSort(a.date) > formatDateForSort(b.date) ? 1 : -1\n      ); // sort by date\n      updateData(sortedData);\n      createFilters(sortedData);\n    }\n\n    const mainTimelineData =\n      \"https://docs.google.com/spreadsheets/d/1v96fpa9peEx2LLEnto3FeagSkWOmsCM8JlRKoa1HDpE/pubhtml\";\n\n    const submittedResponseData =\n      \"https://docs.google.com/spreadsheets/d/1DFao95ZdEZLDeHEX8LxY4FsRN5q4cqBDiGZYTKYDObc/pubhtml\";\n\n    let mainTimeline = [];\n\n    const setup = () => {\n      Tabletop.init({\n        key: mainTimelineData,\n        callback: function (data, tabletop) {\n          mainTimeline = data;\n          Tabletop.init({\n            key: submittedResponseData,\n            callback: (data) => {\n              finishSetup(mainTimeline, data);\n            },\n            simpleSheet: true,\n          });\n        },\n        simpleSheet: true,\n      });\n    };\n    setup();\n  }, []);\n\n  function formatDate(dateString, precise) {\n    const monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    const splitString = dateString.split(\"/\");\n    const month = monthNames[parseInt(splitString[0], 10) - 1];\n    const day = parseInt(splitString[1], 10);\n    const year = splitString[2];\n    const formattedDate = `${month} ${precise !== \"N\" ? day : \"\"}`;\n    return [formattedDate, year];\n  }\n\n  let peopleToShow = [];\n  filterPeople.map((filter, i) => {\n    if (filter.checked) {\n      peopleToShow.push(`${filter.person}`);\n    }\n  });\n\n  let typesToHide = [];\n  filterTypes.map((filter, i) => {\n    if (!filter.checked) {\n      typesToHide.push(`${filter.type}`);\n    }\n  });\n\n  // take comma separated string and return array of people strings\n  function formatPeople(people) {\n    let peopleStringWithoutSpaces = people.split(\", \").join(\",\");\n    const peopleInEvent = peopleStringWithoutSpaces.split(\",\");\n    return peopleInEvent;\n  }\n\n  let showYear = false;\n  let currentYear = 0;\n\n  const photoMap = {\n    Adi,\n    Ana,\n    Andrew,\n    \"Angus Logan\": Angus,\n    Anna,\n    Annabeth,\n    Anshul,\n    Bob,\n    Brian,\n    Catherine,\n    Chris,\n    \"Chris Hayes\": ChrisHayes,\n    \"David Paparelli\": DavidPaparelli,\n    Emmy,\n    Eric,\n    Erik,\n    Greg,\n    Hansel,\n    Harrison,\n    James,\n    Joi,\n    Kristina,\n    Lea,\n    Maggie,\n    Max,\n    May,\n    Mel,\n    \"Michael Cooney\": MichaelCooney,\n    Neha,\n    Noah,\n    Rachel,\n    Rob,\n    Sarah,\n    Saumil,\n    Saurin,\n    \"Scott Woolf\": ScottWoolf,\n    Shanni,\n    Steven,\n    Vaibhav,\n    Will,\n    Zach,\n  };\n\n  const randomAvatarColors = [\n    \"#beebe9\",\n    \"#f4dada\",\n    \"#ffb6b9\",\n    \"#f6eec7\",\n    \"#f1c6d3\",\n    \"#e4a3d4\",\n    \"#c295d8\",\n    \"#b0deff\",\n    \"#ffc5a1\",\n    \"#ffd19a\",\n    \"#fff8a6\",\n    \"#b0deff\",\n    \"#ffc5a1\",\n    \"#ffd19a\",\n    \"#fff8a6\",\n  ];\n\n  const timelineItems = data.map(\n    ({ event, precise, date, type, size, people }, index) => {\n      let peopleInThisEvent = formatPeople(people);\n      // this will show EXCLUSIVE filtering (at least one filter must be present)\n      // which means there must be AT LEAST one of peopleToShow in peopleInThisEvent\n      let peopleInFiltersAndThisEvent = peopleInThisEvent.filter(\n        (value) => -1 !== peopleToShow.indexOf(value)\n      );\n\n      // this will show INCLUSIVE filtering (all filters must be present)\n      //   which means ALL peopleToShow must be in peopleInThisEvent\n      let allPeopleInFiltersAreInThisEvent = peopleToShow.every((person) =>\n        peopleInThisEvent.includes(person)\n      );\n\n      let peopleNotInFilter = peopleInFiltersAndThisEvent.length < 1;\n      let typeNotInFilter = typesToHide.indexOf(type) !== -1;\n\n      let hideThisItem = isFilterPeopleExclusive\n        ? peopleNotInFilter || typeNotInFilter\n        : !allPeopleInFiltersAreInThisEvent || typeNotInFilter;\n\n      // don't show year UNLESS it hasn't been shown yet\n      showYear = false;\n      if (formatDate(date, precise)[1] > currentYear && !hideThisItem) {\n        showYear = true;\n        currentYear = formatDate(date, precise)[1];\n      }\n\n      // get the people pix\n      let peopleAvatars = peopleInThisEvent.map((person, i) => {\n        let photoUrl = photoMap[person];\n        let showInitial = photoUrl === undefined;\n        return (\n          <div\n            key={i}\n            style={{\n              backgroundImage: `url(${photoUrl})`,\n              backgroundColor: `${\n                randomAvatarColors[\n                  Math.floor(Math.random() * randomAvatarColors.length)\n                ]\n              }`,\n            }}\n            className=\"person\"\n          >\n            {showInitial && person.charAt(0)}\n            <div className=\"person-label\">{person}</div>\n          </div>\n        );\n      });\n\n      return (\n        <>\n          {showYear && (\n            <div className=\"year-wrap\" id={formatDate(date, precise)[1]}>\n              <div className=\"year\">{formatDate(date, precise)[1]}</div>\n            </div>\n          )}\n          <div\n            key={index}\n            className={`item type--${type} size--${size || \"m\"}\n          ${hideThisItem ? \"hide\" : \"\"} `}\n          >\n            <div className=\"item-inner\">\n              <div className=\"date\">{formatDate(date, precise)[0]}</div>\n\n              <div className=\"item-content\">\n                <div className=\"event\">\n                  <span>{event}</span>\n                </div>\n\n                <div className=\"people-wrap\">{peopleAvatars}</div>\n              </div>\n            </div>\n\n            <div className=\"edit-btn-wrap\">\n              <div\n                className=\"edit-btn\"\n                onClick={() => {\n                  updateEditModalOpen(true);\n                  updateMilestoneDescToSubmit(event);\n                  updateMilestoneDateToSubmit(date);\n                  updateMilestonePeopleToSubmit(people);\n                }}\n              >\n                <AddCommentIcon fill=\"#bbbbbb\" />\n              </div>\n            </div>\n          </div>\n        </>\n      );\n    }\n  );\n\n  const typeCheckboxes = filterTypes.map((filter, i) => {\n    return (\n      <div key={filter.uid} className=\"form-field form-field--checkbox\">\n        <label\n          // key={filter.uid}\n          className={`checkbox-container checkbox--${filter.type}`}\n        >\n          {filter.type}\n          <input\n            type=\"checkbox\"\n            onChange={(e) => {\n              let newFilterTypes = [...filterTypes];\n              newFilterTypes[i].checked = !newFilterTypes[i].checked;\n              updateFilterTypes(newFilterTypes);\n            }}\n            checked={filter.checked}\n          />\n          <span className=\"checkmark\" />\n        </label>\n      </div>\n    );\n  });\n\n  const peopleCheckboxes = filterPeople.map((filter, i) => {\n    return (\n      <div key={filter.uid} className=\"form-field form-field--checkbox\">\n        <label className=\"checkbox-container\">\n          {filter.person}\n          <input\n            type=\"checkbox\"\n            onChange={() => {\n              let newFilterPeople = [...filterPeople];\n              newFilterPeople[i].checked = !newFilterPeople[i].checked;\n              updateFilterPeople(newFilterPeople);\n            }}\n            checked={filter.checked}\n          />\n          <span className=\"checkmark\" />\n        </label>\n      </div>\n    );\n  });\n\n  const addEventCheckboxes = addEventCheckboxesData.map((checkData, i) => {\n    return (\n      <div key={checkData.uid} className=\"form-field form-field--checkbox\">\n        <label className=\"checkbox-container\">\n          {checkData.person}\n          <input\n            type=\"checkbox\"\n            onChange={() => {\n              let newAddEventCheckboxesData = [...addEventCheckboxesData];\n              newAddEventCheckboxesData[i].checked = !newAddEventCheckboxesData[\n                i\n              ].checked;\n              updateAddEventCheckboxesData(newAddEventCheckboxesData);\n            }}\n            checked={checkData.checked}\n          />\n          <span className=\"checkmark\" />\n        </label>\n      </div>\n    );\n  });\n\n  function updateAllPeopleCheckboxes(value) {\n    let oldFilterPeople = [...filterPeople];\n    let newFilterPeople = [];\n    oldFilterPeople.forEach(({ person, uid }) => {\n      let newFilter = {\n        person,\n        checked: value,\n        uid,\n      };\n      newFilterPeople.push(newFilter);\n    });\n    updateFilterPeople(newFilterPeople);\n    updateCheckAllPeople(!checkAllPeople);\n  }\n\n  function updateAllTypeCheckboxes(value) {\n    let oldFilterTypes = [...filterTypes];\n    let newFilterTypes = [];\n    oldFilterTypes.forEach(({ type, uid }) => {\n      let newFilter = {\n        type,\n        checked: value,\n        uid,\n      };\n      newFilterTypes.push(newFilter);\n    });\n    updateFilterTypes(newFilterTypes);\n    updateCheckAllTypes(!checkAllTypes);\n  }\n\n  function updateAllAddEventCheckboxes(value) {\n    let oldAddEventCheckboxesData = [...addEventCheckboxesData];\n    let newAddEventCheckboxesData = [];\n    oldAddEventCheckboxesData.forEach(({ person, uid }) => {\n      let newPersonCheckbox = {\n        person,\n        checked: value,\n        uid,\n      };\n      newAddEventCheckboxesData.push(newPersonCheckbox);\n    });\n    updateAddEventCheckboxesData(newAddEventCheckboxesData);\n  }\n\n  // HELPER FUNCTIONS FOR 'EDIT MILESTONE' FORM\n  function clearEditFormFields() {\n    updateEditEventDesc(\"\");\n    updatePeopleCheck(false);\n    updateDateCheck(false);\n    updateDescCheck(false);\n  }\n\n  function closeEditModal() {\n    clearEditFormFields();\n    updateEditModalOpen(false);\n  }\n\n  // HELPER FUNCTIONS FOR 'ADD A MILESTONE' FORM\n  function clearAddFormFields() {\n    updateAddEventType(\"\"); // what type of milestone is it?\n    updateAllAddEventCheckboxes(false); // who was involved?\n    updateAddEventDate(\"\"); // when did it happen?\n    updateAddEventDesc(\"\"); // what happened?\n    updateAddEventPrecise(false); // \"this date isn't exact\" checkbox\n    updateAddEventOtherPeople(\"\"); // anyone else?\n  }\n\n  function closeAddModal() {\n    clearAddFormFields();\n    updateAddModalOpen(false);\n  }\n\n  // builds the string to submit to google form\n  function createStringOfAllPeopleInAddEvent() {\n    let arrayOfAllPeople = [];\n    addEventCheckboxesData.forEach((checkbox, i) => {\n      if (checkbox.checked) {\n        arrayOfAllPeople.push(checkbox.person);\n      }\n    });\n    if (addEventOtherPeople.length > 0) {\n      arrayOfAllPeople.push(addEventOtherPeople);\n    }\n    let stringOfAllPeopleInEvent = arrayOfAllPeople.join(\", \");\n    return stringOfAllPeopleInEvent;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"timeline\">\n        <div className=\"title-wrap\">\n          <h1 className=\"title\">\n            The <br />\n            Baller <br />\n            Express\n          </h1>\n          <div className=\"btn-wrap\">\n            <a\n              className=\"btn\"\n              onClick={() => {\n                updateModal(true);\n              }}\n            >\n              Filter the timeline\n            </a>\n            <a\n              className=\"btn\"\n              onClick={() => {\n                updateAddModalOpen(true);\n              }}\n            >\n              Add a milestone\n            </a>\n            <a\n              href=\"https://photos.app.goo.gl/dEVzY9gZQb4pjsfM9\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"btn\"\n            >\n              Upload your photos\n            </a>\n          </div>\n        </div>\n\n        {timelineItems}\n      </div>\n\n      <div className=\"footer\">\n        Made by ABC for an amazing group of buddies 💜\n      </div>\n\n      <div\n        className={`modal__edit-event modal-wrap ${\n          editModalOpen ? \"modal-open\" : \"\"\n        }`}\n      >\n        <div\n          className=\"modal-bg\"\n          onClick={() => {\n            closeEditModal();\n          }}\n        />\n        <div className=\"modal modal--edit\">\n          <div\n            className=\"modal-close\"\n            onClick={() => {\n              closeEditModal();\n            }}\n          >\n            close\n          </div>\n\n          <script type=\"text/javascript\">var submitted=false;</script>\n          <iframe\n            name=\"hidden_iframe\"\n            id=\"hidden_iframe\"\n            style={{ display: \"none\" }}\n            onload=\"if(submitted)  {window.location='#'}\"\n          />\n\n          <SubmitEditForm\n            onSubmit={() =>\n              updateEditModalOpen(false).then(clearEditFormFields())\n            }\n            milestoneDateToSubmit={milestoneDateToSubmit}\n            dateCheck={dateCheck}\n            updateDateCheck={updateDateCheck}\n            milestonePeopleToSubmit={milestonePeopleToSubmit}\n            peopleCheck={peopleCheck}\n            updatePeopleCheck={updatePeopleCheck}\n            milestoneDescToSubmit={milestoneDescToSubmit}\n            descCheck={descCheck}\n            updateDescCheck={updateDescCheck}\n            peopleCheck={peopleCheck}\n            updatePeopleCheck={updatePeopleCheck}\n            editEventDesc={editEventDesc}\n            updateEditEventDesc={updateEditEventDesc}\n          ></SubmitEditForm>\n        </div>\n      </div>\n\n      <div\n        className={`modal__add-event modal-wrap ${\n          addModalOpen ? \"modal-open\" : \"\"\n        }`}\n      >\n        <div\n          className=\"modal-bg\"\n          onClick={() => {\n            closeAddModal();\n          }}\n        />\n        <div className=\"modal modal--add\">\n          <div\n            className=\"modal-close\"\n            onClick={() => {\n              closeAddModal();\n            }}\n          >\n            close\n          </div>\n          <AddMilestoneForm\n            onSubmit={() =>\n              updateAddModalOpen(false).then(clearAddFormFields())\n            }\n            addEventType={addEventType}\n            updateAddEventType={updateAddEventType}\n            addEventDate={addEventDate}\n            updateAddEventDate={updateAddEventDate}\n            addEventPrecise={addEventPrecise}\n            updateAddEventPrecise={updateAddEventPrecise}\n            addEventDesc={addEventDesc}\n            updateAddEventDesc={updateAddEventDesc}\n            addEventCheckboxes={addEventCheckboxes}\n            addEventOtherPeople={addEventOtherPeople}\n            updateAddEventOtherPeople={updateAddEventOtherPeople}\n            createStringOfAllPeopleInAddEvent={\n              createStringOfAllPeopleInAddEvent\n            }\n          ></AddMilestoneForm>\n        </div>\n      </div>\n\n      <div className={`modal-wrap ${modalOpen ? \"modal-open\" : \"\"}`}>\n        <div\n          className=\"modal-bg\"\n          onClick={() => {\n            updateModal(false);\n          }}\n        />\n        <div className=\"modal modal--filter\">\n          <div\n            className=\"modal-close\"\n            onClick={() => {\n              updateModal(false);\n            }}\n          >\n            close\n          </div>\n          <div className=\"filter-block--type\">\n            <div className=\"filter-header\">\n              <h2>Milestones</h2>\n              <p\n                className=\"check-all\"\n                onClick={() => {\n                  updateAllTypeCheckboxes(checkAllTypes);\n                }}\n              >\n                {checkAllTypes ? \"Check all\" : \"Uncheck all\"}\n              </p>\n            </div>\n            <div className=\"filter-wrap\">\n              <div className=\"filter filter-type\">{typeCheckboxes}</div>\n            </div>\n          </div>\n          <div className=\"filter-block--people\">\n            <div className=\"filter-header\">\n              <div>\n                <h2>People</h2>\n                <p\n                  className=\"check-all\"\n                  onClick={() => {\n                    updateAllPeopleCheckboxes(checkAllPeople);\n                  }}\n                >\n                  {checkAllPeople ? \"Check all\" : \"Uncheck all\"}\n                </p>\n              </div>\n\n              <div className=\"exclusive-wrapper\">\n                <p className=\"exclusive-label\">\n                  Only show milestones that involve ALL people selected below\n                </p>\n                <div>\n                  <label className=\"switch\">\n                    <input\n                      type=\"checkbox\"\n                      onChange={() => {\n                        updateIsFilterPeopleExclusive(!isFilterPeopleExclusive);\n                      }}\n                      checked={!isFilterPeopleExclusive}\n                    />\n                    <span className=\"slider round\" />\n                  </label>\n                </div>\n              </div>\n            </div>\n            <div className=\"filter-wrap\">\n              <div className=\"filter filter-people\">{peopleCheckboxes}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}